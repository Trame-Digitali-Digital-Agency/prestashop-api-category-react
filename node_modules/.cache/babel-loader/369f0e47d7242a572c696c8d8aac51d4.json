{"ast":null,"code":"var _jsxFileName = \"/Users/cosmy/workspace/git/myshow-looks/src/Looks.jsx\";\n// Connection to Prestashop API\n// Props to receive:\n// api_protocol, token, api_url, id_category\n//\nimport React from \"react\";\nimport axios from \"axios\";\n\nclass Looks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      looks: [],\n      isLoading: true,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    const url = `${this.props.api_protocol}://${this.props.token}@${this.props.api_url}/categories/?output_format=JSON&filter[active]=1&display=[id,name,link_rewrite]&sort=[id_DESC]&filter[id_parent]=${this.props.id_category}`;\n    axios.get(url).then(response => response.data).then(data => {\n      this.setState({\n        looks: data,\n        isLoading: false\n      });\n    }) // Catch any errors we hit and update the app\n    .catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n    console.log(this.state);\n  }\n\n  render() {\n    const {\n      looks,\n      isLoading,\n      error\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"looks-list looks-full-image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, error ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 18\n      }\n    }, error.message) : null, !isLoading ? looks.map((look, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"looks-list-element col-xs-12 col-md-12 col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: `/${look.id}-${look.link_rewrite}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: look.name,\n      href: `${this.props.api_protocol}://${this.props.token}@${this.props.api_url}/images/categories/${look.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }))))) : /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, \"Loading...\"));\n  }\n\n}\n\nexport default Looks;","map":{"version":3,"sources":["/Users/cosmy/workspace/git/myshow-looks/src/Looks.jsx"],"names":["React","axios","Looks","Component","constructor","props","state","looks","isLoading","error","componentDidMount","url","api_protocol","token","api_url","id_category","get","then","response","data","setState","catch","console","log","render","message","map","look","index","id","link_rewrite","name"],"mappings":";AAAA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,SAAS,EAAE,IAFA;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,GAAG,GAAI,GAAE,KAAKN,KAAL,CAAWO,YAAa,MAAK,KAAKP,KAAL,CAAWQ,KAAM,IAAG,KAAKR,KAAL,CAAWS,OAAQ,oHAAmH,KAAKT,KAAL,CAAWU,WAAY,EAA7N;AAEAd,IAAAA,KAAK,CAACe,GAAN,CAAUL,GAAV,EACGM,IADH,CACUC,QAAD,IAAcA,QAAQ,CAACC,IADhC,EAEGF,IAFH,CAEUE,IAAD,IAAU;AACT,WAAKC,QAAL,CAAc;AAAEb,QAAAA,KAAK,EAAEY,IAAT;AAAeX,QAAAA,SAAS,EAAE;AAA1B,OAAd;AACP,KAJH,EAKE;AALF,KAMGa,KANH,CAMSZ,KAAK,IAAI,KAAKW,QAAL,CAAc;AAAEX,MAAAA,KAAF;AAASD,MAAAA,SAAS,EAAE;AAApB,KAAd,CANlB;AAQAc,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAjB;AAED;;AAEDkB,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAEjB,MAAAA,KAAF;AAASC,MAAAA,SAAT;AAAoBC,MAAAA;AAApB,QAA8B,KAAKH,KAAzC;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGG,KAAK,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,KAAK,CAACgB,OAAV,CAAH,GAA4B,IAFpC,EAIG,CAACjB,SAAD,GACCD,KAAK,CAACmB,GAAN,CAAW,CAACC,IAAD,EAAOC,KAAP,kBACP;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,4CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,IAAI,EAAG,IAAGD,IAAI,CAACE,EAAG,IAAGF,IAAI,CAACG,YAAa,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEH,IAAI,CAACI,IAAf;AAAqB,MAAA,IAAI,EAAG,GAAE,KAAK1B,KAAL,CAAWO,YAAa,MAAK,KAAKP,KAAL,CAAWQ,KAAM,IAAG,KAAKR,KAAL,CAAWS,OAAQ,sBAAqBa,IAAI,CAACE,EAAG,EAA/H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CADJ,CADD,gBAWC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAfJ,CADF;AAoBD;;AAlDiC;;AAqDpC,eAAe3B,KAAf","sourcesContent":["// Connection to Prestashop API\n// Props to receive:\n// api_protocol, token, api_url, id_category\n//\nimport React from \"react\";\nimport axios from \"axios\";\n\nclass Looks extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      looks: [],\n      isLoading: true,\n      error: null\n    }\n\n  }\n\n  componentDidMount() {\n    const url = `${this.props.api_protocol}://${this.props.token}@${this.props.api_url}/categories/?output_format=JSON&filter[active]=1&display=[id,name,link_rewrite]&sort=[id_DESC]&filter[id_parent]=${this.props.id_category}`;\n\n    axios.get(url)\n      .then( (response) => response.data )\n      .then( (data) => {\n              this.setState({ looks: data, isLoading: false })\n      })\n      // Catch any errors we hit and update the app\n      .catch(error => this.setState({ error, isLoading: false }));\n\n    console.log(this.state);\n\n  }\n\n  render() {\n\n    const { looks, isLoading, error } = this.state;\n    return (\n      <div className=\"looks-list looks-full-image\">\n\n        {error ? <p>{error.message}</p> : null}\n\n        {!isLoading ? (\n          looks.map( (look, index) => (\n              <div className=\"row\">\n                <div className=\"looks-list-element col-xs-12 col-md-12 col\">\n                  <a href={`/${look.id}-${look.link_rewrite}`}>\n                    <img alt={look.name} href={`${this.props.api_protocol}://${this.props.token}@${this.props.api_url}/images/categories/${look.id}`} />\n                  </a>\n                </div>\n              </div>\n          ))\n        ):(\n          <h3>Loading...</h3>\n        )}\n      </div>\n    );\n  }\n\n}\nexport default Looks;\n"]},"metadata":{},"sourceType":"module"}